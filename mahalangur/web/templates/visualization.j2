<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mahalangur</title>
    <style>
        html, body, header, footer, div {
            padding: 0;
            margin: 0;
        }

        #container {
            display: flex;
            flex-flow: column;
            width: 100vw;
            height: 100vh;
        }

        #header {
            background-color: blue;
        }

        #map {
            flex: 1;
        }

        #modal {
            display: None;
        }
    </style>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
        integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
        crossorigin=""/>
</head>
<body>
<main id="container">
    <header id="header">
        <h1>Mahalangur</h1>
    </header>
    <div id="map"></div>
    <footer><p>Leaflet</p></footer>
</main>
<div id="modal">
    <div id="modal-content">
        <h1>This is where the modal content is</h1>
    </div>
</div>

<script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
    integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
    crossorigin=""></script>

<script>
    const osmUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
          otmUrl = 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png';

    const latLower = 27.4089635,
          latUpper = 30.5429669,
          lonLower = 80.7562824,
          lonUpper = 88.6565770;

    const latPadding = (latUpper - latLower)*0.5,
          lonPadding = (lonUpper - lonLower)*0.5;

    const bounds = L.latLngBounds(
        L.latLng(latLower - latPadding, lonLower - lonPadding),
        L.latLng(latUpper + latPadding, lonUpper + lonPadding)
    );

    var himalLayer = L.geoJSON(),
        peakLayer  = L.geoJSON(),
        osmLayer   = L.tileLayer(osmUrl, {bounds: bounds}),
        otmLayer   = L.tileLayer(otmUrl, {bounds: bounds});

    var himalayaMap = L.map('map', {
        attributionControl: false,
        center: [29, 84.5],
        layers: [otmLayer, himalLayer, peakLayer],
        maxBounds: bounds,
        minZoom: 7,
        zoom: 8
    });

    var baseMaps = {
        'OpenTopoMap'  : otmLayer,
        'OpenStreetMap': osmLayer
    };

    var overlayMaps = {
        'Himals': himalLayer,
        'Peaks' : peakLayer
    };

    L.control.layers(baseMaps, overlayMaps).addTo(himalayaMap);

    var himalList = {};
    var peakList  = {};

    function populateHimalList(himalCollection) {
        parentHimals = new Set();

        himalCollection.features.forEach(himal => {
            if ('parent' in himal.properties) {
                parentHimals.add(himal.properties.parent);
            }
        })

        himalCollection.features.forEach(himal => {
            if (!(parentHimals.has(himal.id))) {
                himalList[himal.id] = himal;
                himal.properties['probability'] = Math.random();
            }
        })
    }

    function updateHimalLayer() {
        Object.values(himalList).forEach(himal => {
            himalLayer.addData(himal)
        })
    }

    fetch('{{ url_for('static', filename='himal.geojson') }}')
        .then((response) => {return response.json();})
        .then((himalCollection) => {
            populateHimalList(himalCollection);
            updateHimalLayer();
        });


</script>

</body>
</html>